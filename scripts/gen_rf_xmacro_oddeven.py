#!/usr/bin/env python
import os.path
import sys


def gen_xmacro_oddeven():
    # the maximum number of args
    i = 64
    print("Generating rf_xmacro_oddeven.h ...")
    f = open(os.path.dirname(
        sys.argv[0]) + "/../include/Preprocessor/rf_xmacro_oddeven.h", "w")
    # put some required definitions at the top
    f.write("/**\n** @author Lefteris\n** @date 01/10/2015\n**\n\
**This file contains token definition for checking if a number is odd or even with\n\
**the C preprocessor. It is automatically generated by a python script\n\
**gen_rf_xmacro_oddeven.py\n*/")

    f.write("\n//! This is the macro from which addition will be achieved")
    f.write("\n#define RP_IS_ODD(v1__)  i_IS_ODD_##v1__\n\n")
    # the outermost while
    while (i > 0):
        f.write("#define i_IS_ODD_{}   {}\n".format(str(i), str(i % 2)))
        i -= 1

    # at the end close the file
    print("rf_xmacro_oddeven.h has been generated!")
    f.close()


if __name__ == '__main__':
    gen_xmacro_oddeven()
