#the maximum number from which subtraction can happen
i = 64

#stuff to import to be able to open files in the parent directory
import os.path
import sys

print("Generating rf_xmacro_sub.h ...");
#f = open(os.path.dirname(__file__) + "/../Preprocessor/rf_xmacro_sub.h","w");
f = open(os.path.dirname(sys.argv[0]) + "/../include/Preprocessor/rf_xmacro_sub.h","w");

#put some required definitions at the top
f.write("/**\n** @author Lefteris\n** @date 13/02/2012\n**\n\
**This file contains token definition for emulating subtraction with\n\
**the C preprocessor. It is automatically generated by a python script\n\
**gen_rf_xmacro_sub.py\n*/")

f.write("\n//! This is the macro from which subtraction will actually be achieved")
f.write("\n#define RP_SUB(v1__,v2__)  i_SUB_##v1__##_##v2__\n\n")

#the outermost while
while(i > 0):
    f.write("//! These are the tokens for subtraction from "+str(i)+"\n");
    j = i;
    #this is the individual while for which we get each subtraction from i
    while(j>=0):
        f.write("#define i_SUB_"+str(i)+"_"+str(j)+"   "+str(i-j)+"\n")
        j-=1
    i-=1
    f.write("\n")
    


#at the end close the file
print("rf_xmacro_sub.h has been generated!");
f.close();
